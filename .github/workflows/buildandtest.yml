name: Bakup Agent CI

on: 
  workflow_dispatch:
  pull_request:
    branches: [master, develop]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  Build_and_Test_Bakup_Agent:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Clone Agent Repository and Gather Submodules
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install Dependencies
      shell: bash
      run: sudo apt-get update -y && sudo apt-get install libcurl4-openssl-dev

    - name: Get rClone
      shell: bash
      run: sudo mkdir /opt/bakupagent && sudo wget -O /opt/bakupagent/rclone https://agent.bakup.io/rclone/latest

    - name: Give rClone Permission to Execute
      shell: bash
      run: sudo chmod +x /opt/bakupagent/rclone

    - name: Create Build Environment
      # Create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Use CMake to configure our build system for the Bakup Agent
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_C_COMPILER=/usr/bin/gcc-9 -DDEBUG:BOOL=TRUE -DCMAKE_CXX_COMPILER=/usr/bin/g++-9 --debug-output --trace-expand

    - name: Create Environment Files
      shell: bash
      # Create files which are required by the Bakup Agent in order to run
      run: sudo mkdir -p /etc/opt/bakupagent && echo "API_TOKEN" | sudo tee /etc/opt/bakupagent/API_TOKEN && echo "CLIENT_ID" | sudo tee /etc/opt/bakupagent/CLIENT_ID

    - name: Create Bakupagent User
      shell: bash
      run: sudo useradd -r --shell /bin/bash bakupagent && id=$(id -u bakupagent) && echo $id | sudo tee /etc/opt/bakupagent/USER_ID

    - name: Give Bakupagent Permissions
      shell: bash
      run: sudo chown bakupagent -R /opt/bakupagent && sudo chown bakupagent -R /etc/opt/bakupagent

    - name: Build Bakup Agent and Test Executable
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make --debug

    - name: Run Test Executable
      working-directory: ${{runner.workspace}}/build/tests/
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: sudo ./Bakup_Agent_tst
